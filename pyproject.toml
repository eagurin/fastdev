[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fastdev-mcp"
version = "0.1.0"
description = "Intelligent MCP server for FastAPI - Because life is too short for 'Address already in use'"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    { name = "FastDEV Contributors", email = "fastdev@example.com" },
]
keywords = [
    "fastapi",
    "mcp",
    "model-context-protocol",
    "development",
    "ai-agents",
    "automation",
    "devtools"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Framework :: FastAPI",
]

dependencies = [
    "fastmcp>=0.1.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
    "psutil>=5.9.0",
    "watchdog>=3.0.0",
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "httpx>=0.24.0",
    "structlog>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "bandit>=1.7.0",
    "flake8>=6.0.0",
    "pylint>=3.0.0",
]

analysis = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "bandit>=1.7.0",
    "flake8>=6.0.0",
    "pylint>=3.0.0",
    "ast-comments>=1.0.0",
    "astunparse>=1.6.0",
]

monitoring = [
    "prometheus-client>=0.18.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
]

[project.urls]
Homepage = "https://github.com/eagurin/fastdev"
Documentation = "https://fastdev.readthedocs.io"
Repository = "https://github.com/eagurin/fastdev"
Issues = "https://github.com/eagurin/fastdev/issues"
Discord = "https://discord.gg/fastdev"

[project.scripts]
fastdev = "fastdev.cli:app"

[tool.hatch.version]
path = "src/fastdev/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
    "/CONTRIBUTING.md",
]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
line-length = 88
select = ["E", "F", "W", "C90", "I", "N", "UP", "B", "A", "C4", "PT", "SIM"]
ignore = ["E501"]
target-version = "py38"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=fastdev --cov-report=html --cov-report=term"

[tool.coverage.run]
source = ["src/fastdev"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
